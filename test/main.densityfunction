include "minecraft.densityfunction";
import df.*;

export shift_x = flat_cache(cache_2d(shift_a("minecraft:offset")));
export shift_z = flat_cache(cache_2d(shift_b("minecraft:offset")));
export y = y_clamped_gradient(-4064, 4062, -4064.0, 4062.0);
export zero = 0.0;

module overworld {
    export base_3d_noise = old_blended_noise(0.25, 0.125, 80.0, 160.0, 8.0);

    export continents = flat_cache(shifted_noise("minecraft:shift_x", 0.0, "minecraft:shift_z", 0.25, 0.0, "minecraft:continentalness"));
    export depth = y_clamped_gradient(-64, 320, 1.5, -1.5) + "minecraft:overworld/offset";
    export erosion = flat_cache(shifted_noise("minecraft:shift_x", 0.0, "minecraft:shift_z", 0.25, 0.0, "minecraft:erosion"));

    // export offset = flat_cache(cache_2d(...));
    // export factor = flat_cache(cache_2d(...));
    // export jaggedness = flat_cache(cache_2d(...));

    export ridges = flat_cache(shifted_noise("minecraft:shift_x", 0.0, "minecraft:shift_z", 0.25, 0.0, "minecraft:ridge"));
    export ridges_folded = -3.0 * (-0.3333333333333333 + (-0.6666666666666666 + "minecraft:overworld/ridges".abs()).abs());

    export sloped_cheese = 4.0 * quarter_negative(
        ("minecraft:overworld/depth" + "minecraft:overworld/jaggedness" * half_negative(noise("minecraft:jagged", 1500.0, 0.0)))
        * "minecraft:overworld/factor") + "minecraft:overworld/base_3d_noise";

    module caves {
        export entrances = cache_once(min(
            (0.37 + noise("minecraft:cave_entrance", 0.75, 0.5)) + y_clamped_gradient(-10, -30, 0.3, 0.0),
            "minecraft:overworld/caves/spaghetti_roughness_function" +
                clamp(
                    max(
                        weird_scaled_sampler(cache_once(noise("minecraft:spaghetti_3d_rarity", 2.0, 1.0)), "minecraft:spaghetti_3d_1", "type_1"),
                        weird_scaled_sampler(cache_once(noise("minecraft:spaghetti_3d_rarity", 2.0, 1.0)), "minecraft:spaghetti_3d_2", "type_1")
                    ) + (
                        -0.0765 + -0.011499999999999996 * noise("minecraft:spaghetti_3d_thickness", 1.0, 1.0)
                ), -1.0, 1.0)
        ));

        export noodle = range_choice(
            interpolated(range_choice("minecraft:y", -60.0, 321.0, noise("minecraft:noodle", 1.0, 1.0), -1.0)),
            -1000000.0, 0.0,
            64.0,
            interpolated(range_choice("minecraft:y", -60.0, 321.0, -0.07500000000000001 + -0.025 * noise("minecraft:noodle_thickness", 1.0, 1.0), 0.0))
                + 1.5 * max(
                    abs(interpolated(range_choice("minecraft:y", -60.0, 321.0, noise("minecraft:noodle_ridge_a", 1.0, 1.0), 0.0))),
                    abs(interpolated(range_choice("minecraft:y", -60.0, 321.0, noise("minecraft:noodle_ridge_b", 1.0, 1.0), 0.0)))
                )
        );

        export pillars = cache_once(
            (2.0 * noise("minecraft:pillar", 25.0, 0.3) + (-1.0 + -1.0 * noise("minecraft:pillar_rareness", 1.0, 1.0)))
                * cube(0.55 + 0.55 * noise("minecraft:pillar_thickness", 1.0, 1.0))
        );

        export spaghetti_2d_thickness_modulator = cache_once(
            -0.95 + -0.35000000000000003 * noise("minecraft:spaghetti_2d_thickness", 2.0, 1.0)
        );

        export spaghetti_2d = clamp(
            max(
                weird_scaled_sampler(noise("minecraft:spaghetti_2d_modulator", 2.0, 1.0), "minecraft:spaghetti_2d", "type_2")
                    + 0.083 * "minecraft:overworld/caves/spaghetti_2d_thickness_modulator",
                cube(abs(0.0 + 8.0 * noise("minecraft:spaghetti_2d_elevation", 1.0, 0.0) +
                    y_clamped_gradient(-64, 320, 8.0, -40.0)) + "minecraft:overworld/caves/spaghetti_2d_thickness_modulator")
            ),
            -1.0, 1.0
        );

        export spaghetti_roughness_export = cache_once(
            (-0.05 + -0.05 * noise("minecraft:spaghetti_roughness_modulator", 1.0, 1.0)) *
                (-0.4 + abs(noise("minecraft:spaghetti_roughness", 1.0, 1.0)))
        );
    }
}
